//VulnerabilityController.js

var express = require('express');
var router = express.Router();
var bodyParser = require('body-parser');

router.use(bodyParser.urlencoded({extended: true}));
router.use(bodyParser.json());
var Host = require('./schema/Host');

router.post('/:ip/:port', function(req, res) {
	Host.findOne({ip: req.params.ip}, function(err, host) {
		if(err) return res.status(300).send("{'error': 'There was a problem finding the host'}");
		if(!host) return res.status(404).send("{'error': 'no team found'}");
		for(var i = 0; i<host.openPorts.length; i++) {
			if(host.openPorts[i].port == req.params.port) {
				host.openPorts[i].vulnerabilities.push({
					vulnerability: req.body.vulnerability,
					notes: req.body.notes,
					severity: req.body.severity,
					user: req.body.user }
					);
				host.save();
				res.status(200).send("{'status': 'ok'}");
				return;
			}
		}
		res.status(404).send("{'error': 'port not found'}");
	});
});

router.get('/', function(req, res) {
	Host.find({}, function (err, hosts) {
		vulns = hosts.map(host => {
			hostVulns = host.openPorts.map(port => {
				return {
					port: port.port,
					vulnerabilities: port.vulnerabilities
				}
			});
			filteredHostVulns = hostVulns.filter(port => port.vulnerabilities.length > 0);
			return {
				host: host.ip,
				ports: filteredHostVulns
			}
		});
		filteredVulns = vulns.filter(host => host.ports.length > 0);
		res.status(200).send(filteredVulns);
		
	});
});

module.exports = router;